<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<# var members = new System.Collections.Generic.List<string>(); #>
<# foreach(var table in Tables) { #>
<# var tableName = TableNameTransformer(table.Name); #>
<# var repositoryName = $"{tableName}Repository"; #>
<# members.Add($"readonly {tableName} : {repositoryName} = new {repositoryName}();"); #>
import <#= repositoryName #> from './Repositories/<#= table.Name + "Repository" #>';
<# } #>
export default class Service
{
	static Context : Service = new Service();
	private constructor()
	{
	}
<# foreach(var member in members) { #>
	<#= member #>
<# } #>
}
<#+
	public string Namespace {get; set;}
	public bool IsNamespaceProvided => !string.IsNullOrWhiteSpace(Namespace);
	public System.Collections.Generic.IEnumerable<ModelGenerator.Core.Refined.Entity.Table> Tables { get; set; }
	public System.Collections.Generic.IEnumerable<Utilities.Classes.StoredProcedureSchema> StoredProcedures {get;set;}
	public string DatabaseType { get; set; }
	public string DatabaseParamType { get; set ;}
	public Func<string,string> DataTypeMap { get; set; }
	public Func<string,string> TableNameTransformer {get;set;}
#>