<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<#if(!IsPartial) { #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a ModelGenerator.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
<# } #>
using Utilities.Interfaces;
<# if(IsNamespaceProvided) { #>
using <#= Namespace #>.Repositories.Based;
using <#= Namespace #>.Models;
namespace <#= Namespace #>.Repositories
{
<# } #>
	///<summary>
	/// Data contractor for <#= TableName #>
	///</summary>
	public partial class <#= RepositoryName #> : Repository<<#= TableName #>,<#= Table.ConnectionProvider #>,<#= Table.ConnectionProviderParameterType #>>
	{
<# if(!IsPartial) { #>
		public <#= RepositoryName #>(IDatabaseConnectorExtension<<#= Table.ConnectionProvider #>,<#= Table.ConnectionProviderParameterType #>> connector) : base(connector)
		{
		}
<# } #>
	}
<# if(IsNamespaceProvided) { #>
}
<# } #>

<#+
	public string Namespace {get; set;}
	public bool IsNamespaceProvided => !string.IsNullOrWhiteSpace(Namespace);
	public ModelGenerator.Core.Entity.Table Table { get; set; }
	public bool IsPartial {get;set;}
	public string TableName => TableNameTransformer(Table.Name);
	public string RepositoryName => $"{TableName}Repository";
	public Func<Utilities.Classes.TableSchema,string> DataTypeMap { get; set; }
	public Func<string,string> TableNameTransformer {get;set;}
#>